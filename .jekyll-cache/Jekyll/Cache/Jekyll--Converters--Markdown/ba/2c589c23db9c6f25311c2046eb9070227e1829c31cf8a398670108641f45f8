I"8<h3 id="the-example-shows-how-to-use-kramdown-to-convert-markdown-file-to-html-in-apps-developed-with-object-cc-for-iphone">The example shows how to use kramdown to convert markdown file to html in apps developed with object-c/c++ for iphone.</h3>

<head>
    <link href="/assets/css/code.css" rel="stylesheet" type="text/css" />
</head>

<h1 align="left"><font color="#FF9900">Introduction</font></h1>

<p>kramdown can convert markdown file to html, which is written in pure ruby.</p>

<p>The example shows how to use kramdown to convert markdown file to html in apps developed with object-c/c++ for iphone.</p>

<h1 align="left"><font color="#FF9900">Background</font></h1>

<p>This example is based on CLE. CLE supports windows platform, ruby language, and interaction between ruby and delphi.</p>

<p>The sample is developed with xcode, ruby 2.2, and kramdown-1.16.2.</p>

<h3 id="1-install-cle">1. Install CLE</h3>

<ul>
  <li>
    <p>Download and unzip starcore for ios</p>

    <p><a href="https://github.com/srplab/starcore_for_ios" title="starcore_for_ios">starcore_for_ios</a></p>

    <p><img src="/images/install_starcore_ios_2_5_2.png" alt="" width="640px" /></p>
  </li>
</ul>

<h3 id="2-create-new-xcode-project">2. Create new xcode project</h3>

<ul>
  <li>
    <p>create a single view application</p>

    <p><img src="/images/ios_xcode_singleview_project.png" alt="" width="640px" /></p>
  </li>
</ul>

<h3 id="3-set-project-parameters">3. Set project parameters</h3>

<ul>
  <li>
    <p>Set preprocessor macros, add “ENV_IOS”</p>

    <p><img src="/images/ios_xcode_project_macros.png" alt="" width="640px" /></p>
  </li>
  <li>
    <p>Set “header search paths” and “library search paths”</p>

    <p><img src="/images/ios_xcode_project_path.png" alt="" width="640px" /></p>
  </li>
  <li>
    <p>Change file “ViewController.m” to “ViewController.mm”</p>

    <p><img src="/images/ios_xcode_project_file_tomm.png" alt="" /></p>
  </li>
  <li>
    <p>Add link binary “libiconv.tbd”, etc</p>

    <p><img src="/images/ios_call_ruby_kramdown_add_binary.png" alt="" width="640px" /></p>
  </li>
  <li>
    <p>Add ruby libraries</p>

    <p><img src="/images/ios_call_ruby_kramdown_add_ruby_files.png" alt="" /></p>
  </li>
  <li>
    <p>Add kramdown-1.16.2.</p>

    <p><img src="/images/ios_call_ruby_kramdown_add_kramdown.png" alt="" width="640px" /></p>
  </li>
</ul>

<h1 align="left"><font color="#FF9900">Using the code</font></h1>

<h3 id="1-initialize-cle">1. Initialize CLE</h3>

<ul>
  <li>add “vsopenapi.h”</li>
</ul>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++"><span class="cp">#include "vsopenapi.h"
</span>    </code></pre></figure>

<ul>
  <li>define callback function</li>
</ul>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++">    
<span class="k">static</span> <span class="k">class</span> <span class="nc">ClassOfSRPInterface</span> <span class="o">*</span><span class="n">SRPInterface</span><span class="p">;</span>

<span class="k">static</span> <span class="n">VS_UWORD</span> <span class="nf">MsgCallBack</span><span class="p">(</span> <span class="n">VS_ULONG</span> <span class="n">ServiceGroupID</span><span class="p">,</span> <span class="n">VS_ULONG</span> <span class="n">uMsg</span><span class="p">,</span> <span class="n">VS_UWORD</span> <span class="n">wParam</span><span class="p">,</span> <span class="n">VS_UWORD</span> <span class="n">lParam</span><span class="p">,</span> <span class="n">VS_BOOL</span> <span class="o">*</span><span class="n">IsProcessed</span><span class="p">,</span> <span class="n">VS_UWORD</span> <span class="n">Para</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">switch</span><span class="p">(</span> <span class="n">uMsg</span> <span class="p">){</span>
        <span class="k">case</span> <span class="n">MSG_VSDISPMSG</span> <span class="p">:</span>
        <span class="k">case</span> <span class="n">MSG_VSDISPLUAMSG</span> <span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"[core]%s</span><span class="se">\n</span><span class="s">"</span><span class="p">,(</span><span class="n">VS_CHAR</span> <span class="o">*</span><span class="p">)</span><span class="n">wParam</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="n">MSG_DISPMSG</span> <span class="p">:</span>
        <span class="k">case</span> <span class="n">MSG_DISPLUAMSG</span> <span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"%s</span><span class="se">\n</span><span class="s">"</span><span class="p">,(</span><span class="n">VS_CHAR</span> <span class="o">*</span><span class="p">)</span><span class="n">wParam</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<h3 id="2-initialize-cleruby-and-set-ruby-libraries-searching-path">2. Initialize cle,ruby and set ruby libraries searching path</h3>

<ul>
  <li>initialize cle</li>
</ul>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++">    <span class="n">NSArray</span> <span class="o">*</span><span class="n">paths</span> <span class="o">=</span> <span class="n">NSSearchPathForDirectoriesInDomains</span><span class="p">(</span><span class="n">NSDocumentDirectory</span><span class="p">,</span>   <span class="n">NSUserDomainMask</span><span class="p">,</span> <span class="n">YES</span><span class="p">);</span>
    <span class="n">NSString</span> <span class="o">*</span><span class="n">documentsDirectory</span> <span class="o">=</span> <span class="p">[</span><span class="n">paths</span> <span class="n">objectAtIndex</span><span class="o">:</span><span class="mi">0</span><span class="p">];</span>
    
    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">destDir</span> <span class="o">=</span> <span class="p">[</span><span class="n">documentsDirectory</span> <span class="n">UTF8String</span><span class="p">];</span>
    <span class="n">VS_BOOL</span> <span class="n">Result</span> <span class="o">=</span> <span class="n">StarCore_Init</span><span class="p">((</span><span class="n">VS_CHAR</span> <span class="o">*</span><span class="p">)</span><span class="n">destDir</span><span class="p">);</span>
    
    <span class="n">VSCoreLib_InitRuby</span><span class="p">();</span>
    
    <span class="n">VS_CORESIMPLECONTEXT</span> <span class="n">Context</span><span class="p">;</span>
    
    <span class="n">SRPInterface</span> <span class="o">=</span> <span class="n">VSCoreLib_InitSimple</span><span class="p">(</span><span class="o">&amp;</span><span class="n">Context</span><span class="p">,</span><span class="s">"test"</span><span class="p">,</span><span class="s">"123"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">MsgCallBack</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="n">SRPInterface</span> <span class="o">-&gt;</span><span class="n">CheckPassword</span><span class="p">(</span><span class="n">VS_FALSE</span><span class="p">);</span></code></pre></figure>

<ul>
  <li>initialize ruby</li>
</ul>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++">    <span class="n">NSString</span> <span class="o">*</span><span class="n">respaths</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="n">resourcePath</span><span class="p">];</span>
    <span class="k">const</span> <span class="n">VS_CHAR</span> <span class="o">*</span><span class="n">res_cpath</span> <span class="o">=</span> <span class="p">[</span><span class="n">respaths</span> <span class="n">UTF8String</span><span class="p">];</span>
    
    <span class="k">class</span> <span class="nc">ClassOfBasicSRPInterface</span> <span class="o">*</span><span class="n">BasicSRPInterface</span><span class="p">;</span>
    
    <span class="n">BasicSRPInterface</span> <span class="o">=</span> <span class="n">SRPInterface</span> <span class="o">-&gt;</span><span class="n">GetBasicInterface</span><span class="p">();</span>
    <span class="n">BasicSRPInterface</span> <span class="o">-&gt;</span><span class="n">InitRaw</span><span class="p">(</span><span class="s">"ruby"</span><span class="p">,</span> <span class="n">SRPInterface</span><span class="p">);</span></code></pre></figure>

<ul>
  <li>ser ruby library search path</li>
</ul>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++">    <span class="kt">void</span> <span class="o">*</span><span class="n">ruby</span> <span class="o">=</span> <span class="n">SRPInterface</span> <span class="o">-&gt;</span> <span class="n">ImportRawContext</span><span class="p">(</span><span class="s">"ruby"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">VS_FALSE</span><span class="p">,</span> <span class="s">""</span><span class="p">);</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">LOAD_PATH</span> <span class="o">=</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">SRPInterface</span> <span class="o">-&gt;</span> <span class="n">ScriptGetObject</span><span class="p">(</span><span class="n">ruby</span><span class="p">,</span><span class="s">"LOAD_PATH"</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    
    <span class="kt">char</span> <span class="n">pathbuf</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
    <span class="n">sprintf</span><span class="p">(</span><span class="n">pathbuf</span><span class="p">,</span><span class="s">"%s/ruby/2.2.0"</span><span class="p">,</span><span class="n">res_cpath</span><span class="p">);</span>
    <span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">ScriptCall</span><span class="p">(</span><span class="n">LOAD_PATH</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="s">"unshift"</span><span class="p">,</span> <span class="s">"(s)"</span><span class="p">,</span><span class="n">pathbuf</span><span class="p">);</span>
    
    <span class="n">sprintf</span><span class="p">(</span><span class="n">pathbuf</span><span class="p">,</span><span class="s">"%s/kramdown-1.16.2/lib"</span><span class="p">,</span><span class="n">res_cpath</span><span class="p">);</span>
    <span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">ScriptCall</span><span class="p">(</span><span class="n">LOAD_PATH</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="s">"unshift"</span><span class="p">,</span> <span class="s">"(s)"</span><span class="p">,</span><span class="n">pathbuf</span><span class="p">);</span></code></pre></figure>

<h3 id="3-call-kramdown">3. Call kramdown</h3>

<figure class="highlight" style="color:gray;margin:0 0 0 2em"><pre><code class="language-c--" data-lang="c++">    <span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">ScriptCall</span><span class="p">(</span><span class="n">ruby</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="s">"require"</span><span class="p">,</span> <span class="s">"(s)"</span><span class="p">,</span><span class="s">"kramdown"</span><span class="p">);</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">KramdownDocument</span> <span class="o">=</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">ScriptCall</span><span class="p">(</span><span class="n">ruby</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="s">"eval"</span><span class="p">,</span> <span class="s">"(s)o"</span><span class="p">,</span><span class="s">"Kramdown::Document"</span><span class="p">);</span>
    
    <span class="kt">void</span> <span class="o">*</span><span class="n">resobj</span> <span class="o">=</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">SRPInterface</span> <span class="o">-&gt;</span><span class="n">IMallocObjectL2</span><span class="p">(</span><span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">GetIDEx</span><span class="p">(</span><span class="n">KramdownDocument</span><span class="p">),</span><span class="s">"s"</span><span class="p">,</span><span class="s">"# aaaaaa"</span><span class="p">);</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">html</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">SRPInterface</span><span class="o">-&gt;</span><span class="n">ScriptCall</span><span class="p">(</span><span class="n">resobj</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="s">"method_missing"</span><span class="p">,</span> <span class="s">"(s)s"</span><span class="p">,</span><span class="s">"to_html"</span><span class="p">);</span></code></pre></figure>

<h1 align="left"><font color="#FF9900">Sample Download</font></h1>

<ul>
  <li>
    <p>download from here</p>

    <p><a href="/datas/ios_call_ruby_kramdown.zip" title="ios_call_ruby_kramdown">ios_call_ruby_kramdown.zip</a></p>
  </li>
</ul>

<h1 align="left"><font color="#FF9900">History</font></h1>

:ET