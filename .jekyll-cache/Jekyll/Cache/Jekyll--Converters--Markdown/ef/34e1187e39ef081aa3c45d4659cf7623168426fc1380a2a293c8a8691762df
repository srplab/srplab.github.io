I"ò[<h3 id="this-example-shows-how-to-call-golang-modules-from-flutter">This example shows how to call golang modules from flutter.</h3>

<p>This example is based on <a href="https://github.com/srplab/starcore_for_flutter">starcore_for_flutter</a>, which enables flutter calls other programming languages.
The golang module to be call is taken from the post <a href="http://www.srplab.info/go/2018/06/19/writting_golang_multithreading_extension_for_other_scripts.html">Writting Go Lang Multi-Threading Extension for Other Scripts</a>
The code also packed in the example of this post.</p>

<h1 align="left"><font color="#FF9900">Step by Step</font></h1>

<h3 id="1-create-flutter-project">1. Create flutter project</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>flutter create flutter_golang
</code></pre></div></div>

<h3 id="2-add-dependency-package-starflut">2. Add dependency package ‚Äústarflut‚Äù</h3>

<p>Edit ‚Äúpubspec.yaml‚Äù</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dev_dependencies:
  flutter_test:
    sdk: flutter

  starflut: ^0.5.2
</code></pre></div></div>

<h3 id="3-create-jnilibs-for-golang-share-libraries-of-android">3. Create ‚ÄújniLibs‚Äù for golang share libraries of android</h3>

<p><img src="/images/flutter_and_golang_android_sharelibrary.png" alt="" width="320px" /></p>

<p>The ‚Äúlibstar_go.so‚Äù is compiled from golang module, as step 4.</p>

<h3 id="4-compiling-golang-module-for-android-and-ios">4. Compiling golang module for android and ios</h3>

<ul>
  <li>Android</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># compiled with android-ndk-r12b</span>

<span class="nv">GO</span><span class="o">=</span><span class="s2">"/usr/local/go/bin/go"</span>

<span class="nb">arch</span><span class="o">=(</span><span class="s2">"x86"</span> <span class="s2">"x86_64"</span> <span class="s2">"arm64"</span> <span class="s2">"arm"</span><span class="o">)</span><span class="p">;</span>

<span class="k">for </span>s <span class="k">in</span> <span class="k">${</span><span class="nv">arch</span><span class="p">[@]</span><span class="k">}</span><span class="p">;</span> <span class="k">do
  </span><span class="nb">echo</span> <span class="s2">"build for </span><span class="nv">$s</span><span class="s2">"</span>

  <span class="nb">cd </span>writting_golang_multithreading_extension_for_other_scripts

  <span class="nb">export </span><span class="nv">GOOS</span><span class="o">=</span>android
  <span class="nb">export </span><span class="nv">CGO_ENABLED</span><span class="o">=</span>1

  <span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"arm"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">NDK_TOOLCHAIN</span><span class="o">=</span>/Users/srplab/Desktop/ndk_toolchain/android-toolchain.arm
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="nv">$NDK_TOOLCHAIN</span>/bin/arm-linux-androideabi-gcc
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>arm
    <span class="nb">export </span><span class="nv">GOARM</span><span class="o">=</span>7
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"x86"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">NDK_TOOLCHAIN</span><span class="o">=</span>/Users/srplab/Desktop/ndk_toolchain/android-toolchain.x86
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="nv">$NDK_TOOLCHAIN</span>/bin/i686-linux-android-gcc
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>386
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"x86_64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">NDK_TOOLCHAIN</span><span class="o">=</span>/Users/srplab/Desktop/ndk_toolchain/android-toolchain.x86_64
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="nv">$NDK_TOOLCHAIN</span>/bin/x86_64-linux-android-gcc
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>amd64
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"arm64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">NDK_TOOLCHAIN</span><span class="o">=</span>/Users/srplab/Desktop/ndk_toolchain/android-toolchain.arm64
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="nv">$NDK_TOOLCHAIN</span>/bin/aarch64-linux-android-gcc
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>arm64
  <span class="k">fi</span>

  <span class="nv">$GO</span> build <span class="nt">-buildmode</span><span class="o">=</span>c-shared <span class="nt">-o</span> libstar_go.so
  
  <span class="nb">cd</span> ..
  <span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"arm"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">cp </span>writting_golang_multithreading_extension_for_other_scripts/libstar_go.so flutter_golang/android/app/src/main/jniLibs/armeabi-v7a
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"x86"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">cp </span>writting_golang_multithreading_extension_for_other_scripts/libstar_go.so flutter_golang/android/app/src/main/jniLibs/x86
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"x86_64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">cp </span>writting_golang_multithreading_extension_for_other_scripts/libstar_go.so flutter_golang/android/app/src/main/jniLibs/x86_64
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"arm64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">cp </span>writting_golang_multithreading_extension_for_other_scripts/libstar_go.so flutter_golang/android/app/src/main/jniLibs/arm64-v8a
  <span class="k">fi

  </span><span class="nb">rm</span> <span class="nt">-rf</span> writting_golang_multithreading_extension_for_other_scripts/libstar_go.so
 
<span class="k">done</span>
</code></pre></div></div>

<ul>
  <li>ios</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">rm</span> <span class="nt">-rf</span> libstar_go.a

<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/:/usr/local/bin:/usr/bin:/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>  
<span class="nb">export </span><span class="nv">SRCPATH</span><span class="o">=</span><span class="s2">"writting_golang_multithreading_extension_for_other_scripts"</span>

<span class="nb">arch</span><span class="o">=(</span><span class="s2">"i386"</span> <span class="s2">"x86_64"</span> <span class="s2">"arm64"</span> <span class="s2">"armv7"</span><span class="o">)</span><span class="p">;</span>

<span class="k">for </span>s <span class="k">in</span> <span class="k">${</span><span class="nv">arch</span><span class="p">[@]</span><span class="k">}</span><span class="p">;</span> <span class="k">do
  </span><span class="nb">echo</span> <span class="s2">"build for </span><span class="nv">$s</span><span class="s2">"</span>

  <span class="nb">cd</span> <span class="nv">$SRCPATH</span>

  <span class="nb">export </span><span class="nv">GOOS</span><span class="o">=</span>darwin
  <span class="nb">export </span><span class="nv">CGO_ENABLED</span><span class="o">=</span>1
  <span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"armv7"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">"-arch </span><span class="nv">$s</span><span class="s2"> -miphoneos-version-min=6.0 -isysroot "</span><span class="si">$(</span>xcrun <span class="nt">-sdk</span> iphoneos <span class="nt">--show-sdk-path</span><span class="si">)</span>
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span>/usr/local/go/misc/ios/clangwrap.sh
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>arm
    <span class="nb">export </span><span class="nv">GOARM</span><span class="o">=</span>7
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"i386"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">"-arch </span><span class="nv">$s</span><span class="s2"> -miphoneos-version-min=6.0 -isysroot "</span><span class="si">$(</span>xcrun <span class="nt">-sdk</span> iphonesimulator <span class="nt">--show-sdk-path</span><span class="si">)</span>
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="s2">"clang </span><span class="nv">$CFLAGS</span><span class="s2">"</span>
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>386
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"x86_64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">"-arch </span><span class="nv">$s</span><span class="s2"> -miphoneos-version-min=6.0 -isysroot "</span><span class="si">$(</span>xcrun <span class="nt">-sdk</span> iphonesimulator <span class="nt">--show-sdk-path</span><span class="si">)</span>
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="s2">"clang </span><span class="nv">$CFLAGS</span><span class="s2">"</span>
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>amd64
  <span class="k">elif</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$s</span><span class="s2">"</span> <span class="o">==</span> <span class="s2">"arm64"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">"-arch </span><span class="nv">$s</span><span class="s2"> -miphoneos-version-min=6.0 -isysroot "</span><span class="si">$(</span>xcrun <span class="nt">-sdk</span> iphoneos <span class="nt">--show-sdk-path</span><span class="si">)</span>
    <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="s2">"clang </span><span class="nv">$CFLAGS</span><span class="s2">"</span>
    <span class="nb">export </span><span class="nv">GOARCH</span><span class="o">=</span>arm64
  <span class="k">fi

  </span>go build <span class="nt">-tags</span><span class="o">=</span><span class="s1">'ios'</span> <span class="nt">-buildmode</span><span class="o">=</span>c-archive <span class="nt">-o</span> libstar_go.a
  
  <span class="nb">cd</span> ..
  <span class="nb">mkdir</span> <span class="nv">$s</span>
  <span class="nb">cp</span> <span class="nv">$SRCPATH</span>/libstar_go.a <span class="nv">$s</span>
  <span class="nb">rm</span> <span class="nt">-rf</span> <span class="nv">$SRCPATH</span>/libstar_go.a
 
<span class="k">done

</span>lipo <span class="nt">-create</span> ./i386/libstar_go.a ./x86_64/libstar_go.a ./armv7/libstar_go.a ./arm64/libstar_go.a <span class="nt">-o</span> libstar_go.a

<span class="nb">rm</span> <span class="nt">-rf</span> ./i386
<span class="nb">rm</span> <span class="nt">-rf</span> ./x86_64
<span class="nb">rm</span> <span class="nt">-rf</span> ./armv7
<span class="nb">rm</span> <span class="nt">-rf</span> ./arm64

lipo <span class="nt">-info</span> libstar_go.a
</code></pre></div></div>

<h3 id="5-dart-code">5. dart code</h3>

<ul>
  <li>Initialize starcore</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">StarCoreFactory</span> <span class="n">starcore</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Starflut</span><span class="o">.</span><span class="na">getFactory</span><span class="o">();</span>
<span class="n">StarServiceClass</span> <span class="n">Service</span> <span class="o">=</span> <span class="n">await</span> <span class="n">starcore</span><span class="o">.</span><span class="na">initSimple</span><span class="o">(</span><span class="s">"test"</span><span class="o">,</span> <span class="s">"123"</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">[]);</span>
<span class="n">await</span> <span class="n">Service</span><span class="o">.</span><span class="na">checkPassword</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</code></pre></div></div>

<ul>
  <li>Register callback function</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">await</span> <span class="n">starcore</span><span class="o">.</span><span class="na">regMsgCallBackP</span><span class="o">(</span>
        <span class="o">(</span><span class="kt">int</span> <span class="n">serviceGroupID</span><span class="o">,</span> <span class="kt">int</span> <span class="n">uMsg</span><span class="o">,</span> <span class="kt">Object</span> <span class="n">wParam</span><span class="o">,</span> <span class="kt">Object</span> <span class="n">lParam</span><span class="o">)</span> <span class="n">async</span><span class="o">{</span>
          <span class="k">if</span><span class="o">(</span> <span class="n">uMsg</span> <span class="o">==</span> <span class="n">Starflut</span><span class="o">.</span><span class="na">MSG_DISPMSG</span> <span class="o">||</span> <span class="n">uMsg</span> <span class="o">==</span> <span class="n">Starflut</span><span class="o">.</span><span class="na">MSG_DISPLUAMSG</span> <span class="o">){</span>
            <span class="n">ShowOutput</span><span class="o">(</span><span class="n">wParam</span><span class="o">);</span>
          <span class="o">}</span>
      <span class="n">print</span><span class="o">(</span><span class="s">"</span><span class="si">$serviceGroupID</span><span class="s">  </span><span class="si">$uMsg</span><span class="s">   </span><span class="si">$wParam</span><span class="s">   </span><span class="si">$lParam</span><span class="s">"</span><span class="o">);</span>
      <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">});</span>
</code></pre></div></div>

<p>In callback function, we capture the output from golang, and show it in text window.</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kt">void</span> <span class="nf">ShowOutput</span><span class="p">(</span><span class="kt">String</span> <span class="n">Info</span><span class="o">)</span> <span class="n">async</span><span class="o">{</span>
    <span class="k">if</span><span class="o">(</span> <span class="n">Info</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">Info</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
      <span class="k">return</span><span class="o">;</span>
    <span class="n">_outputString</span> <span class="o">=</span> <span class="n">_outputString</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> <span class="n">Info</span><span class="o">;</span>
    <span class="n">setState</span><span class="o">((){</span>

    <span class="o">});</span>
  <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>Load and execute golang module</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kt">bool</span> <span class="n">isAndroid</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Starflut</span><span class="o">.</span><span class="na">isAndroid</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span> <span class="n">isAndroid</span> <span class="o">==</span> <span class="kc">true</span> <span class="o">){</span>
      <span class="kt">String</span> <span class="n">path</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Starflut</span><span class="o">.</span><span class="na">getNativeLibraryDir</span><span class="o">();</span>
      <span class="n">List</span> <span class="n">result</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Service</span><span class="o">.</span><span class="na">doFile</span><span class="o">(</span><span class="s">""</span><span class="o">,</span><span class="n">path</span> <span class="o">+</span> <span class="s">"/libstar_go.so"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
      <span class="n">print</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
    <span class="o">}</span><span class="k">else</span><span class="o">{</span>
      <span class="n">List</span> <span class="n">result</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Service</span><span class="o">.</span><span class="na">doFile</span><span class="o">(</span><span class="s">""</span><span class="o">,</span><span class="s">"libstar_go.dylib"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
      <span class="n">print</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
    <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>Get starcore object created by golang module</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">StarObjectClass</span> <span class="n">goObject</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Service</span><span class="o">.</span><span class="na">getObject</span><span class="o">(</span><span class="s">"testgo"</span><span class="o">);</span>
    <span class="n">print</span><span class="o">(</span><span class="s">"</span><span class="si">$goObject</span><span class="s">"</span><span class="o">);</span>
</code></pre></div></div>

<ul>
  <li>Create starcore object, which will be called from golang</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">StarObjectClass</span> <span class="n">callBackObj</span> <span class="o">=</span> <span class="n">await</span> <span class="n">Service</span><span class="o">.</span><span class="na">newObject</span><span class="o">([</span><span class="s">"LuaObj"</span><span class="o">]);</span>
    <span class="n">await</span> <span class="n">callBackObj</span><span class="o">.</span><span class="na">regScriptProcP</span><span class="o">(</span><span class="s">"Print"</span><span class="o">,</span> <span class="o">(</span><span class="n">StarObjectClass</span> <span class="n">cleObject</span><span class="o">,</span> <span class="n">List</span> <span class="n">paras</span> <span class="o">)</span> <span class="n">async</span> <span class="o">{</span>
			    <span class="n">print</span><span class="o">(</span><span class="s">"hello from lua"</span><span class="o">);</span>
			    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
		      <span class="o">});</span>
</code></pre></div></div>

<ul>
  <li>Call golang function</li>
</ul>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">dynamic</span> <span class="n">ttResult</span> <span class="o">=</span> <span class="n">await</span> <span class="n">goObject</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="s">"tt"</span><span class="o">,[</span><span class="mi">222</span><span class="o">,</span><span class="mi">333</span><span class="o">]);</span>
    <span class="n">print</span><span class="o">(</span><span class="s">"</span><span class="si">$ttResult</span><span class="s">"</span><span class="o">);</span>
</code></pre></div></div>

<h3 id="6-compile-for-ios">6. compile for ios</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>flutter clean
<span class="nv">$ </span><span class="nb">export </span><span class="nv">STARCORE_PATH</span><span class="o">=</span><span class="s1">'/Users/srplab/Desktop'</span>
<span class="nv">$ </span><span class="nb">export </span><span class="nv">STARCORE_GOLIBRARYPATH</span><span class="o">=</span><span class="s1">'/Users/srplab/Desktop/flutter.study.example/flutter.golang'</span>
<span class="nv">$ </span>flutter build ios <span class="nt">--no-codesign</span>
</code></pre></div></div>

<h3 id="7-screenshot">7. screenshot</h3>

<p><img src="/images/flutter_and_golang_ios_screenshot.png" alt="" width="320px" /></p>

<p><img src="/images/flutter_and_golang_android_screenshot.jpg" alt="" width="320px" /></p>

<h1 align="left"><font color="#FF9900">Sample Download</font></h1>

<p><a href="/datas/flutter_and_golang_sample.zip" title="flutter_and_golang_sample">flutter_and_golang_sample.zip</a></p>

:ET