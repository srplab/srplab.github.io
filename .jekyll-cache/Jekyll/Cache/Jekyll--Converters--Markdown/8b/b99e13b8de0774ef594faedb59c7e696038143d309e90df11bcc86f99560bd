I"p<h3 id="this-example-shows-how-to-compile-python-native-module-and-to-use-it-in-android-application">This example shows how to compile python native module and to use it in android application.</h3>

<h1 align="left"><font color="#FF9900">Step by Step</font></h1>

<p>This example is based on <a href="https://github.com/srplab/starcore_for_android">cle for android</a>, and test with android ndk r10d.
To illustrate how to compile, we chose a python module <a href="https://github.com/aio-libs/aiohttp">aiohttp</a>.</p>

<h3 id="1-compile-aiohttp-with-ndk">1. Compile aiohttp with ndk</h3>

<ul>
  <li>
    <p>Download and unzip aiohttp</p>
  </li>
  <li>
    <p>Copy files about python 3.6, which can be found from starcore_for_android, to the same directory with aiohttp.</p>

    <p><img src="/images/compiling_and_using_python_module_in_android_pci1.png" alt="" width="640px" /></p>
  </li>
  <li>
    <p>Setup compiling environment</p>
  </li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">ANDROID_NDK</span><span class="o">=</span><span class="s2">"/usr/local/android/android-ndk-r10d"</span>
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"</span><span class="nv">$ANDROID_NDK</span><span class="s2">/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64/bin/:</span><span class="nv">$ANDROID_NDK</span><span class="s2">:</span><span class="nv">$ANDROID_NDK</span><span class="s2">/tools:/usr/local/bin:/usr/bin:/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
<span class="nb">export </span><span class="nv">ARCH</span><span class="o">=</span><span class="s2">"armeabi"</span>
<span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">"-DANDROID -mandroid -fomit-frame-pointer --sysroot=</span><span class="nv">$ANDROID_NDK</span><span class="s2">/platforms/android-9/arch-arm -I../python-3.6/armeabi/include/python3.6m"</span>
<span class="nb">export </span><span class="nv">CXXFLAGS</span><span class="o">=</span><span class="s2">"</span><span class="nv">$CFLAGS</span><span class="s2">"</span>
<span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-gcc"</span>
<span class="nb">export </span><span class="nv">LDFLAGS</span><span class="o">=</span><span class="s2">"-lm -L../python-3.6/armeabi"</span>
<span class="nb">export </span><span class="nv">CXX</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-g++"</span>
<span class="nb">export </span><span class="nv">AR</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-ar"</span>
<span class="nb">export </span><span class="nv">RANLIB</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-ranlib"</span>
<span class="nb">export </span><span class="nv">STRIP</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-strip --strip-unneeded"</span>
<span class="nb">export </span><span class="nv">READELF</span><span class="o">=</span><span class="s2">"arm-linux-androideabi-readelf"</span>
<span class="nb">export </span><span class="nv">MAKE</span><span class="o">=</span><span class="s2">"make -j4 CROSS_COMPILE_TARGET=yes"</span>
</code></pre></div></div>

<ul>
  <li>Change the setup.py of aiohttp</li>
</ul>

<p>Add the following code to function “build_extension” of class “ve_build_ext” of setup.py</p>

<figure class="highlight" style="color:gray;"><pre><code class="language-py" data-lang="py">   
        <span class="k">if</span> <span class="s">'/usr/local/include/python3.6m'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">'/usr/local/include/python3.6m'</span><span class="p">)</span>
        <span class="kn">import</span> <span class="nn">os</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">linker_so</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'CC'</span><span class="p">)</span>  
        <span class="n">ext</span><span class="o">.</span><span class="n">extra_link_args</span> <span class="o">=</span> <span class="p">[</span><span class="s">'-Wl,-soname,'</span><span class="o">+</span><span class="n">build_ext</span><span class="o">.</span><span class="n">get_ext_filename</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">ext</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)[</span><span class="mi">1</span><span class="p">],]</span>        
  </code></pre></figure>

<p>Like this,</p>

<figure class="highlight" style="color:gray;"><pre><code class="language-py" data-lang="py"><span class="k">class</span> <span class="nc">ve_build_ext</span><span class="p">(</span><span class="n">build_ext</span><span class="p">):</span>
    <span class="c1"># This class allows C extension building to fail.
</span>
    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>   
        <span class="k">try</span><span class="p">:</span>
            <span class="n">build_ext</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
        <span class="k">except</span> <span class="p">(</span><span class="n">DistutilsPlatformError</span><span class="p">,</span> <span class="nb">FileNotFoundError</span><span class="p">):</span>
            <span class="k">raise</span> <span class="n">BuildFailed</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">build_extension</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ext</span><span class="p">):</span>  
    
        <span class="k">if</span> <span class="s">'/usr/local/include/python3.6m'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">'/usr/local/include/python3.6m'</span><span class="p">)</span>
        <span class="kn">import</span> <span class="nn">os</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">linker_so</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'CC'</span><span class="p">)</span>  
        <span class="n">ext</span><span class="o">.</span><span class="n">extra_link_args</span> <span class="o">=</span> <span class="p">[</span><span class="s">'-Wl,-soname,'</span><span class="o">+</span><span class="n">build_ext</span><span class="o">.</span><span class="n">get_ext_filename</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">ext</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)[</span><span class="mi">1</span><span class="p">],]</span>
        
  </code></pre></figure>

<p>The above code may need to make some adjustments based on the system environment</p>

<ul>
  <li>Compile aiohttp</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 setup.py build
</code></pre></div></div>

<p>The result is located at “aiohttp-3.1/build/lib.linux-x86_64-3.6”</p>

<ul>
  <li>Compile dependent modules and compress them to “aiohttp_module.zip”</li>
</ul>

<p>aiohttp depends other python modules, such as “multidict”, “yarl”, etc. If the modules contains native code, it should be compiled with ndk using the above method.
Copy these modules into a folder, and compress them to “aiohttp_module.zip”</p>

<p><img src="/images/compiling_and_using_python_module_in_android_pci2.png" alt="" width="640px" /></p>

<h3 id="2-using-aiohttp-in-android-application">2. Using aiohttp in android application</h3>

<ul>
  <li>
    <p>Create Project, Add CLE, python libraries and aiohttp_module.zip</p>

    <p><img src="/images/compiling_and_using_python_module_in_android_pci3.png" alt="" width="320px" /></p>

    <p><img src="/images/compiling_and_using_python_module_in_android_pci4.png" alt="" width="320px" /></p>
  </li>
  <li>
    <p>The Python Code in “test.py”</p>
  </li>
</ul>

<figure class="highlight" style="color:gray;"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">aiohttp</span>
<span class="kn">import</span> <span class="nn">asyncio</span>

<span class="k">async</span> <span class="k">def</span> <span class="nf">fetch</span><span class="p">(</span><span class="n">client</span><span class="p">):</span>
    <span class="k">async</span> <span class="k">with</span> <span class="n">client</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'http://www.python.org'</span><span class="p">)</span> <span class="k">as</span> <span class="n">resp</span><span class="p">:</span>
        <span class="k">assert</span> <span class="n">resp</span><span class="o">.</span><span class="n">status</span> <span class="o">==</span> <span class="mi">200</span>
        <span class="k">return</span> <span class="k">await</span> <span class="n">resp</span><span class="o">.</span><span class="n">text</span><span class="p">()</span>


<span class="k">async</span> <span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">connector</span> <span class="o">=</span> <span class="n">aiohttp</span><span class="o">.</span><span class="n">TCPConnector</span><span class="p">(</span><span class="n">verify_ssl</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="k">async</span> <span class="k">with</span> <span class="n">aiohttp</span><span class="o">.</span><span class="n">ClientSession</span><span class="p">(</span><span class="n">connector</span><span class="o">=</span><span class="n">connector</span><span class="p">)</span> <span class="k">as</span> <span class="n">client</span><span class="p">:</span>
        <span class="n">html</span> <span class="o">=</span> <span class="k">await</span> <span class="n">fetch</span><span class="p">(</span><span class="n">client</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>

<span class="n">loop</span> <span class="o">=</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">get_event_loop</span><span class="p">()</span>
<span class="n">loop</span><span class="o">.</span><span class="n">run_until_complete</span><span class="p">(</span><span class="n">main</span><span class="p">())</span></code></pre></figure>

<ul>
  <li>The Java Code</li>
</ul>

<figure class="highlight" style="color:gray;"><pre><code class="language-java" data-lang="java">    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="nc">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

        <span class="nc">File</span> <span class="n">destDir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files"</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">destDir</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span>
            <span class="n">destDir</span><span class="o">.</span><span class="na">mkdirs</span><span class="o">();</span>

        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">AssetManager</span> <span class="n">localassetManager</span> <span class="o">=</span> <span class="n">getAssets</span><span class="o">();</span>
            <span class="nc">InputStream</span> <span class="n">dataSource</span> <span class="o">=</span> <span class="n">localassetManager</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="s">"aiohttp_module.zip"</span><span class="o">);</span>
            <span class="n">unzip</span><span class="o">(</span><span class="n">dataSource</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files"</span><span class="o">,</span><span class="kc">true</span><span class="o">);</span>

            <span class="n">dataSource</span> <span class="o">=</span> <span class="n">localassetManager</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="s">"certs.zip"</span><span class="o">);</span>
            <span class="n">unzip</span><span class="o">(</span><span class="n">dataSource</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files"</span><span class="o">,</span><span class="kc">true</span><span class="o">);</span>

            <span class="cm">/*---so--*/</span>
            <span class="nc">String</span> <span class="n">nativeLibraryDir</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getApplicationInfo</span><span class="o">().</span><span class="na">nativeLibraryDir</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">nativeLibraryDir</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">"x86"</span><span class="o">))</span> <span class="o">{</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_ssl.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"unicodedata.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"zlib.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_posixsubprocess.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"select.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"math.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"array.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_struct.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_socket.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_sha512.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_random.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_multiprocessing.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"binascii.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_md5.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_sha1.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_sha3.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_sha256.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"_blake2.cpython-36m.so"</span><span class="o">,</span> <span class="s">"armeabi/"</span><span class="o">);</span>
                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"python3.6.zip"</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>

                <span class="n">copyFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">"test.py"</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">ex</span><span class="o">){}</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="c1">//--load python36 core library first;</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getApplicationInfo</span><span class="o">().</span><span class="na">nativeLibraryDir</span><span class="o">+</span><span class="s">"/libpython3.6m.so"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">catch</span><span class="o">(</span><span class="nc">UnsatisfiedLinkError</span> <span class="n">ex</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ex</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>

        <span class="cm">/*----init starcore----*/</span>
        <span class="nc">StarCoreFactoryPath</span><span class="o">.</span><span class="na">StarCoreCoreLibraryPath</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getApplicationInfo</span><span class="o">().</span><span class="na">nativeLibraryDir</span><span class="o">;</span>
        <span class="nc">StarCoreFactoryPath</span><span class="o">.</span><span class="na">StarCoreShareLibraryPath</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getApplicationInfo</span><span class="o">().</span><span class="na">nativeLibraryDir</span><span class="o">;</span>
        <span class="nc">StarCoreFactoryPath</span><span class="o">.</span><span class="na">StarCoreOperationPath</span> <span class="o">=</span> <span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files"</span><span class="o">;</span>

        <span class="nc">StarCoreFactory</span> <span class="n">starcore</span><span class="o">=</span> <span class="nc">StarCoreFactory</span><span class="o">.</span><span class="na">GetFactory</span><span class="o">();</span>
        <span class="nc">StarServiceClass</span> <span class="nc">Service</span><span class="o">=</span><span class="n">starcore</span><span class="o">.</span><span class="na">_InitSimple</span><span class="o">(</span><span class="s">"test"</span><span class="o">,</span><span class="s">"123"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">);</span>
        <span class="nc">StarSrvGroupClass</span> <span class="nc">SrvGroup</span> <span class="o">=</span> <span class="o">(</span><span class="nc">StarSrvGroupClass</span><span class="o">)</span><span class="nc">Service</span><span class="o">.</span><span class="na">_Get</span><span class="o">(</span><span class="s">"_ServiceGroup"</span><span class="o">);</span>
        <span class="nc">Service</span><span class="o">.</span><span class="na">_CheckPassword</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>

        <span class="cm">/*----run python code----*/</span>
        <span class="nc">SrvGroup</span><span class="o">.</span><span class="na">_InitRaw</span><span class="o">(</span><span class="s">"python36"</span><span class="o">,</span><span class="nc">Service</span><span class="o">);</span>
        <span class="nc">StarObjectClass</span> <span class="n">python</span> <span class="o">=</span> <span class="nc">Service</span><span class="o">.</span><span class="na">_ImportRawContext</span><span class="o">(</span><span class="s">"python"</span><span class="o">,</span><span class="s">""</span><span class="o">,</span><span class="kc">false</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
        <span class="n">python</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"import"</span><span class="o">,</span> <span class="s">"sys"</span><span class="o">);</span>

        <span class="nc">StarObjectClass</span> <span class="n">pythonSys</span> <span class="o">=</span> <span class="n">python</span><span class="o">.</span><span class="na">_GetObject</span><span class="o">(</span><span class="s">"sys"</span><span class="o">);</span>
        <span class="nc">StarObjectClass</span> <span class="n">pythonPath</span> <span class="o">=</span> <span class="o">(</span><span class="nc">StarObjectClass</span><span class="o">)</span><span class="n">pythonSys</span><span class="o">.</span><span class="na">_Get</span><span class="o">(</span><span class="s">"path"</span><span class="o">);</span>
        <span class="n">pythonPath</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"insert"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files/python3.6.zip"</span><span class="o">);</span>
        <span class="n">pythonPath</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"insert"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="k">this</span><span class="o">.</span><span class="na">getApplicationInfo</span><span class="o">().</span><span class="na">nativeLibraryDir</span><span class="o">);</span>
        <span class="n">pythonPath</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"insert"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files/aiohttp_module"</span><span class="o">);</span>
        <span class="n">pythonPath</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"insert"</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files"</span><span class="o">);</span>

        <span class="n">python</span><span class="o">.</span><span class="na">_Call</span><span class="o">(</span><span class="s">"import"</span><span class="o">,</span> <span class="s">"aiohttp"</span><span class="o">);</span>

        <span class="nc">StarObjectClass</span> <span class="n">aiohttp</span> <span class="o">=</span> <span class="n">python</span><span class="o">.</span><span class="na">_GetObject</span><span class="o">(</span><span class="s">"aiohttp"</span><span class="o">);</span>
        <span class="nc">SrvGroup</span><span class="o">.</span><span class="na">_DoFile</span><span class="o">(</span><span class="s">"python"</span><span class="o">,</span><span class="s">"/data/data/"</span><span class="o">+</span><span class="n">getPackageName</span><span class="o">()+</span><span class="s">"/files/test.py"</span><span class="o">);</span>
    <span class="o">}</span></code></pre></figure>

<h1 align="left"><font color="#FF9900">Sample Download</font></h1>

<p><a href="/datas/test_aiohttp.zip" title="test_aiohttp">test_aiohttp.zip</a></p>

:ET